// Load the TCP Library
const net = require('net');
const msgpack = require('notepack.io');
const PORT = 8181;

// Keep track of the chat clients
let clients = [];

// Start a TCP Server
let server = net.createServer(function (socket) {
  // Identify this client
  socket.name = socket.remoteAddress + ":" + socket.remotePort;

  console.log("NEW CLIENT:", socket.name);

  // Put this new client in the list
  clients.push(socket);

  // Send a nice welcome message and announce
  socket.write( msgpack.encode({ id: 0, name: socket.name }) );

  // Handle incoming messages from clients.
  socket.on('data', function (data) {
    console.log("RECEIVED MESSAGE:", data);
    broadcast(socket.name + "> " + data, socket);
  });

  // Remove the client from the list when it leaves
  socket.on('end', function () {
    console.log(`client ${socket.name} left!`);
    clients.splice(clients.indexOf(socket), 1);
    broadcast(socket.name + " left the chat.\n");
  });

  // Send a message to all clients
  function broadcast(message, sender) {
    clients.forEach(function (client) {
      // Don't want to send it to sender
      if (client === sender) return;
      client.write(message);
    });

    // Log it to the server output too
    process.stdout.write(message)
  }

});

server.listen(PORT, '127.0.0.1', function() {
  // Put a friendly message on the terminal of the server.
  console.log(`TCP server running at port ${PORT}`);
});

